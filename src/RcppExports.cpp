// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// csc_tocsr
Rcpp::List csc_tocsr(const int n_row, const int n_col, const std::vector<int>& Ap, const std::vector<int>& Ai, const std::vector<double>& Ax);
RcppExport SEXP _Azimuth_csc_tocsr(SEXP n_rowSEXP, SEXP n_colSEXP, SEXP ApSEXP, SEXP AiSEXP, SEXP AxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const int >::type n_row(n_rowSEXP);
    Rcpp::traits::input_parameter< const int >::type n_col(n_colSEXP);
    Rcpp::traits::input_parameter< const std::vector<int>& >::type Ap(ApSEXP);
    Rcpp::traits::input_parameter< const std::vector<int>& >::type Ai(AiSEXP);
    Rcpp::traits::input_parameter< const std::vector<double>& >::type Ax(AxSEXP);
    rcpp_result_gen = Rcpp::wrap(csc_tocsr(n_row, n_col, Ap, Ai, Ax));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_Azimuth_csc_tocsr", (DL_FUNC) &_Azimuth_csc_tocsr, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_Azimuth(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
